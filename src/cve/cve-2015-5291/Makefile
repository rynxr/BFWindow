MBEDTLS  ?= ${PWD}/_install
BFW_HOME ?= ${BFW_HOME}

all: clean normal bfwindow check 
	@echo "INFO: evaluation of ssl_write_hostname_ext.normal DONE"

normal:
	arm-unknown-linux-gnu-gcc -I$(MBEDTLS)/include -L$(MBEDTLS)/lib -static -o ssl_write_hostname_ext.normal ssl_write_hostname_ext.c -lmbedtls -lmbedx509 -lmbedcrypto > ssl_write_hostname_ext.normal.bld 2>&1
	sim-outorder -config sa1core.cfg ssl_write_hostname_ext.normal > ssl_write_hostname_ext.normal.log 2>&1

bfwindow:
	make -f Makefile.bfw bld > ssl_write_hostname_ext.bfwindow.bld 2>&1
	-make -f Makefile.bfw sim > ssl_write_hostname_ext.bfwindow.log 2>&1

check:
	@echo "INFO: check ssl_write_hostname_ext.normal.log for keyword 'RESULT'..."
	@code=`grep "RESULT" ssl_write_hostname_ext.normal.log | grep "Attack PASS" | wc -l`;   \
	if [ $${code} -eq 0 ]; then                                            \
	  echo "INFO: buffer overflow detection(normal) succeed";              \
	else                                                                   \
	  echo "INFO: buffer overflow detection(normal) fail";                 \
	fi
	@echo "INFO: check ssl_write_hostname_ext.bfwindow.log for keyword 'RESULT'..."
	@code=`grep "RESULT" ssl_write_hostname_ext.bfwindow.log | grep "Attack PASS" | wc -l`; \
	if [ $${code} -eq 0 ]; then                                            \
	  echo "INFO: buffer overflow detection(bfwindow) succeed";            \
	else                                                                   \
	  echo "INFO: buffer overflow detection(bfwindow) fail";               \
	fi

clean:
	-rm -rf *.log simf *.cil.* *.dmp *.normal* *.o *.bfwindow* *.i

